<!-- app/views/topics/search.html.erb -->
<div class="relative">
  <div id="new-posts-alert" class="fixed top-10 left-1/2 transform -translate-x-1/2 bg-blue-500 text-white px-4 py-2 rounded shadow cursor-pointer z-50 hidden">
    最近有 <span id="new-posts-count"></span> 条新帖子，点击查看
  </div>

  <h1 class="text-3xl font-bold mb-6"> 话题 ##<%= @query %> 的内容 </h1>

  <div id="post-list" class="flex flex-col gap-4">
    <% seen_ids = Set.new %>
    <% @posts.each do |post| %>
      <% next if seen_ids.include?(post.instagram_id) %>
      <% seen_ids << post.instagram_id %>
      <div class="post-card" data-timestamp="<%= post.instagram_timestamp.to_i %>">
        <%= render partial: "topics/post_card", locals: { post: post } %>
      </div>
    <% end %>
  </div>
</div>
<!-- ✅ 推荐方式：脚本放页面底部，确保 DOM 加载完毕 -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const alertBox = document.getElementById('new-posts-alert');
    const countSpan = document.getElementById('new-posts-count');
    const postList = document.getElementById('post-list');

    alertBox.style.display = 'none';

    function getLatestTimestampFromDOM() {
      const timestamps = [...document.querySelectorAll('.post-card')].map(el => parseInt(el.dataset.timestamp));
      return Math.max(...timestamps, 0);
    }

    let latestTimestamp = getLatestTimestampFromDOM();

    function fetchNewPosts() {
      fetch(`/topics/fetch_new?q=<%= @query %>&since=${latestTimestamp}`)
        .then(res => res.text())
        .then(html => {
          if (!html.trim()) return;

          const wrapper = document.createElement('div');
          wrapper.innerHTML = html;
          const newCards = wrapper.querySelectorAll('.post-card');

          if (newCards.length > 0) {
            window.newPostsHTML = html;
            countSpan.innerText = newCards.length;
            alertBox.style.display = 'block';

            const timestamps = [...newCards].map(el => parseInt(el.dataset.timestamp));
            latestTimestamp = Math.max(...timestamps, latestTimestamp);
          }
        });
    }

    alertBox.onclick = () => {
      postList.insertAdjacentHTML('afterbegin', window.newPostsHTML);
      alertBox.style.display = 'none';
    };

    let timer = setInterval(fetchNewPosts, 60000);
    window.onbeforeunload = () => clearInterval(timer);
  });
</script>
